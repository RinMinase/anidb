#   ╔═╗╔═╗╦  ╦╔╗╔╔╦╗┬─┐┌─┐
#   ║╣ ╚═╗║  ║║║║ ║ ├┬┘│
#  o╚═╝╚═╝╩═╝╩╝╚╝ ╩ ┴└─└─┘
# A set of basic code conventions designed to complement the .jshintrc file
# and encourage quality and consistency across your code base.  By default,
# these rules are checked against automatically any time you run `npm run lint`.
#
# > Note: If you're using mocha, you'll want to add an extra override file to your
# > `test/` folder so that eslint will tolerate mocha-specific globals like `before`
# > and `describe`.
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# For more information about any of the rules below, check out the relevant
# reference page on eslint.org.  For example, to get details on "no-sequences",
# you would visit `http://eslint.org/docs/rules/no-sequences`.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

{
  "parserOptions": {
    "ecmaVersion": 6,
    "sourceType": "module"
  },
  "globals": {
    "angular": false
  },
  "env": {
    "browser": true,
    "node": true
  },
  "extends": ["eslint:recommended", "plugin:angular/johnpapa"],
  "rules": {
    # Possible Errors
    "no-unexpected-multiline":          ["warn"],

    # Best Practices
    "curly":                            "error",
    "eqeqeq":                           ["error", "always"],
    "no-fallthrough":                   "off",
    "no-return-assign":                 ["error", "always"],
    "no-sequences":                     ["error"],

    # Variables
    "no-shadow":                        "warn",
    "no-unused-vars":                   ["warn"],
    "no-undef":                         ["off"],

    # Node.js
    "callback-return":                  ["error", ["callback", "cb", "next", "done", "proceed"]],
    "global-require":                   "error",
    "handle-callback-err":              ["error"],

    # Stylistic Issues
    "block-spacing":                    "error",
    "brace-style":                      "error",
    "camelcase":                        "error",
    "comma-dangle":                     ["error", "always-multiline"],
    "comma-spacing":                    ["error", { "before": false, "after": true }],
    "comma-style":                      ["error", "last"],
    "consistent-this":                  ["error", "that"],
    "eol-last":                         ["error", "always"],
    "func-call-spacing":                ["error", "never"],
    "keyword-spacing":                  ["error", { "after": true }],
    "indent":                           ["error", "tab"],
    "line-comment-position":            ["error", { "position": "above" }],
    "linebreak-style":                  ["error", "unix"],
    "max-depth":                        ["error", 4],
    "max-len":                          ["error", 100, 2],
    "max-statements":                   ["error", 50],
    "max-statements-per-line":          ["error", { "max": 1 }],
    "new-cap":                          ["error", { "newIsCap": true }],
    "new-parens":                       "error",
    "newline-after-var":                ["error", "always"],
    "newline-before-return":            "error",
    "no-inline-comments":               "error",
    "no-lonely-if":                     "error",
    "no-mixed-operators":               "error",
    "no-mixed-spaces-and-tabs":         "error",
    "no-multiple-empty-lines":          ["error", { "max": 2, "maxEOF": 1 }],
    "no-negated-condition":             "error",
    "no-nested-ternary":                "error",
    "no-new-object":                    "error",
    "no-trailing-spaces":               ["error", { "skipBlankLines": true }],
    "no-unneeded-ternary":              "error",
    "no-var":                           "error",
    "no-whitespace-before-property":    "error",
    "one-var":                          ["error", "never"],
    "operator-assignment":              ["error", "always"],
    "operator-linebreak":               ["error", "before"],
    "quote-props":                      ["error", "as-needed"],
    "quotes":                           ["error", "double"],
    "semi":                             ["error", "always"],
    "space-infix-ops":                  "error",
    "space-unary-ops":                  "error",
    "spaced-comment":                   ["error", "always"],

    # ECMAScript 6
    "arrow-body-style":                 ["warn", "as-needed"],
    "arrow-parens":                     ["error", "always"],
    "arrow-spacing":                    "error",
    "constructor-super":                "error",
    "no-const-assign":                  "error",
    "no-dupe-class-members":            "error",
    "no-duplicate-imports":             "error",
    "no-new-symbol":                    "error",
    "no-this-before-super":             "error",
    "no-useless-computed-key":          "error",
    "no-useless-constructor":           "error",
    "no-useless-rename":                "error",
    "object-shorthand":                 "error",
    "prefer-arrow-callback":            "error",
    "prefer-const":                     "error",
    "prefer-destructuring": [
      "error",
      { "array": false, "object": true },
      {"enforceForRenamedProperties": false}
    ],
    "prefer-numeric-literals":          "error",
    "prefer-rest-params":               "error",
    "prefer-spread":                    "error",
    "prefer-template":                  "error",
    "require-yield":                    "error",
    "rest-spread-spacing":              ["error", "never"],
    "symbol-description":               "error",
    "yield-star-spacing":               ["error", "after"],

    # AngularJS
    "angular/file-name":                "off",
    "angular/function-type":            ["error", "named"],
    "angular/module-getter":            ["off"],
    "angular/no-service-method":        ["off"]
  }
}
